//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.9.2
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from OrchidParser.g4 by ANTLR 4.9.2

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace Orchid.Parser {
using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="OrchidParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.9.2")]
[System.CLSCompliant(false)]
public interface IOrchidParserVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="OrchidParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitProgram([NotNull] OrchidParser.ProgramContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OrchidParser.statementList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatementList([NotNull] OrchidParser.StatementListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OrchidParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatement([NotNull] OrchidParser.StatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OrchidParser.block"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBlock([NotNull] OrchidParser.BlockContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OrchidParser.arrowFunctions"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArrowFunctions([NotNull] OrchidParser.ArrowFunctionsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OrchidParser.expressionStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpressionStatement([NotNull] OrchidParser.ExpressionStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OrchidParser.assignmentOperatorStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssignmentOperatorStatement([NotNull] OrchidParser.AssignmentOperatorStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OrchidParser.functionDeclaration"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionDeclaration([NotNull] OrchidParser.FunctionDeclarationContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OrchidParser.formalParameterList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFormalParameterList([NotNull] OrchidParser.FormalParameterListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OrchidParser.ifStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIfStatement([NotNull] OrchidParser.IfStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OrchidParser.returnStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitReturnStatement([NotNull] OrchidParser.ReturnStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OrchidParser.printStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrintStatement([NotNull] OrchidParser.PrintStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OrchidParser.assignmentStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssignmentStatement([NotNull] OrchidParser.AssignmentStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OrchidParser.declarationStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDeclarationStatement([NotNull] OrchidParser.DeclarationStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>DoStatement</c>
	/// labeled alternative in <see cref="OrchidParser.iterationStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDoStatement([NotNull] OrchidParser.DoStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>WhileStatement</c>
	/// labeled alternative in <see cref="OrchidParser.iterationStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWhileStatement([NotNull] OrchidParser.WhileStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ForStatement</c>
	/// labeled alternative in <see cref="OrchidParser.iterationStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitForStatement([NotNull] OrchidParser.ForStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OrchidParser.variableDeclarationList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVariableDeclarationList([NotNull] OrchidParser.VariableDeclarationListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OrchidParser.expressionSequence"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpressionSequence([NotNull] OrchidParser.ExpressionSequenceContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OrchidParser.prefixStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrefixStatement([NotNull] OrchidParser.PrefixStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OrchidParser.postfixStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPostfixStatement([NotNull] OrchidParser.PostfixStatementContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ParenthesizedExpression</c>
	/// labeled alternative in <see cref="OrchidParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitParenthesizedExpression([NotNull] OrchidParser.ParenthesizedExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>AdditiveExpression</c>
	/// labeled alternative in <see cref="OrchidParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAdditiveExpression([NotNull] OrchidParser.AdditiveExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>RelationalExpression</c>
	/// labeled alternative in <see cref="OrchidParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitRelationalExpression([NotNull] OrchidParser.RelationalExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>TernaryExpression</c>
	/// labeled alternative in <see cref="OrchidParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTernaryExpression([NotNull] OrchidParser.TernaryExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>IfExpression</c>
	/// labeled alternative in <see cref="OrchidParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIfExpression([NotNull] OrchidParser.IfExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>LogicalAndExpression</c>
	/// labeled alternative in <see cref="OrchidParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLogicalAndExpression([NotNull] OrchidParser.LogicalAndExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>PowerExpression</c>
	/// labeled alternative in <see cref="OrchidParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPowerExpression([NotNull] OrchidParser.PowerExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>UnlessExpression</c>
	/// labeled alternative in <see cref="OrchidParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUnlessExpression([NotNull] OrchidParser.UnlessExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>LiteralExpression</c>
	/// labeled alternative in <see cref="OrchidParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLiteralExpression([NotNull] OrchidParser.LiteralExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>LogicalOrExpression</c>
	/// labeled alternative in <see cref="OrchidParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLogicalOrExpression([NotNull] OrchidParser.LogicalOrExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ArrayLiteralExpression</c>
	/// labeled alternative in <see cref="OrchidParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArrayLiteralExpression([NotNull] OrchidParser.ArrayLiteralExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>NotExpression</c>
	/// labeled alternative in <see cref="OrchidParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNotExpression([NotNull] OrchidParser.NotExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>FunctionCallExpression</c>
	/// labeled alternative in <see cref="OrchidParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionCallExpression([NotNull] OrchidParser.FunctionCallExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>IdentifierExpression</c>
	/// labeled alternative in <see cref="OrchidParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIdentifierExpression([NotNull] OrchidParser.IdentifierExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>UnaryMinusExpression</c>
	/// labeled alternative in <see cref="OrchidParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUnaryMinusExpression([NotNull] OrchidParser.UnaryMinusExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>PrefixExpression</c>
	/// labeled alternative in <see cref="OrchidParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrefixExpression([NotNull] OrchidParser.PrefixExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>AssignmentOperatorExpression</c>
	/// labeled alternative in <see cref="OrchidParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssignmentOperatorExpression([NotNull] OrchidParser.AssignmentOperatorExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>UnaryPlusExpression</c>
	/// labeled alternative in <see cref="OrchidParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUnaryPlusExpression([NotNull] OrchidParser.UnaryPlusExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>PostfixExpression</c>
	/// labeled alternative in <see cref="OrchidParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPostfixExpression([NotNull] OrchidParser.PostfixExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>ArrowFunctionExpression</c>
	/// labeled alternative in <see cref="OrchidParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArrowFunctionExpression([NotNull] OrchidParser.ArrowFunctionExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>MultiplicativeExpression</c>
	/// labeled alternative in <see cref="OrchidParser.singleExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMultiplicativeExpression([NotNull] OrchidParser.MultiplicativeExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OrchidParser.multiplicativeOperators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMultiplicativeOperators([NotNull] OrchidParser.MultiplicativeOperatorsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OrchidParser.additiveOperators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAdditiveOperators([NotNull] OrchidParser.AdditiveOperatorsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OrchidParser.prefixPostfixOps"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitPrefixPostfixOps([NotNull] OrchidParser.PrefixPostfixOpsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OrchidParser.logicalAndOperators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLogicalAndOperators([NotNull] OrchidParser.LogicalAndOperatorsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OrchidParser.logicalOrOperators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLogicalOrOperators([NotNull] OrchidParser.LogicalOrOperatorsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OrchidParser.comparisonOperators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitComparisonOperators([NotNull] OrchidParser.ComparisonOperatorsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OrchidParser.assignmentOperators"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssignmentOperators([NotNull] OrchidParser.AssignmentOperatorsContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OrchidParser.functionCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFunctionCall([NotNull] OrchidParser.FunctionCallContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OrchidParser.identifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIdentifier([NotNull] OrchidParser.IdentifierContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OrchidParser.arrayLiteral"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitArrayLiteral([NotNull] OrchidParser.ArrayLiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OrchidParser.literal"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitLiteral([NotNull] OrchidParser.LiteralContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="OrchidParser.eos"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitEos([NotNull] OrchidParser.EosContext context);
}
} // namespace Orchid.Parser
